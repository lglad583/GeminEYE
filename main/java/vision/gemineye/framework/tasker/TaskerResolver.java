package vision.gemineye.framework.tasker;import java.util.ArrayList;import java.util.Arrays;import java.util.List;public class TaskerResolver {    private List<TaskerService> serviceList = new ArrayList<>();    public TaskerResolver submit(TaskerService... services) {        serviceList.addAll(Arrays.asList(services));        return this;    }    public boolean isComplete() {        for(TaskerService service : serviceList) {            if (!service.isCompleted()) {                return false;            }        }        return true;    }    public boolean isError() {        for(TaskerService service : serviceList) {            if (service.isError()) {                return true;            }        }        return false;    }    public List<Exception> getExceptions() {        List<Exception> exceptions = new ArrayList<>();        for(TaskerService service : serviceList) {            exceptions.addAll(service.getExceptions());        }        return exceptions;    }    public List<String> getErrorMessages() {        List<String> errorMessages = new ArrayList<>();        for(TaskerService service : serviceList) {            errorMessages.addAll(service.getErrorMessages());        }        return errorMessages;    }    public List<TaskerResult> getResults() {        List<TaskerResult> results = new ArrayList<>();        for(TaskerService service : serviceList) {            results.addAll(service.getResults());        }        return results;    }    public void abort() {        for(TaskerService service : serviceList) {            service.abort();        }    }}